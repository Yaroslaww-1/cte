name: build

on:
  push:
    branches: 
      - feature/ci-cd

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DATABASE_USER: ${{ secrets.DATABASE_USER }}
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      DATABASE_DB_NAME: ${{ secrets.DATABASE_DB_NAME }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      BACKEND_HOST: ${{ secrets.BACKEND_HOST }}
      BACKEND_PORT: ${{ secrets.BACKEND_PORT }}

    steps:
    - uses: actions/checkout@v2
    - name: Copy docker-compose.prod.yml to digitalocean
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.DEPLOYMENT_HOST }}
        username: ${{ secrets.DEPLOYMENT_USERNAME }}
        key: ${{ secrets.DEPLOYMENT_KEY }}
        port: ${{ secrets.DEPLOYMENT_PORT }}
        passphrase: ${{ secrets.DEPLOYMENT_PASSPHRASE }}
        source: "docker-compose.prod.yml"
        target: "app"
    - name: Deploy package to digitalocean
      uses: appleboy/ssh-action@master
      env:
          GITHUB_USERNAME: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        host: ${{ secrets.DEPLOYMENT_HOST }}
        username: ${{ secrets.DEPLOYMENT_USERNAME }}
        key: ${{ secrets.DEPLOYMENT_KEY }}
        port: ${{ secrets.DEPLOYMENT_PORT }}
        passphrase: ${{ secrets.DEPLOYMENT_PASSPHRASE }}
        envs: DATABASE_USER, DATABASE_PASSWORD, DATABASE_DB_NAME, DATABASE_URL, BACKEND_HOST, BACKEND_PORT
        script: |
          export GITHUB_USERNAME=$GITHUB_USERNAME
          export GITHUB_TOKEN=$GITHUB_TOKEN
          echo "I am $GITHUB_USERNAME, $GITHUB_TOKEN"
          docker login docker.pkg.github.com -u $GITHUB_USERNAME -p $GITHUB_TOKEN
          export DATABASE_USER=$DATABASE_USER
          export DATABASE_PASSWORD=$DATABASE_DB_NAME
          export DATABASE_URL=$DATABASE_URL
          export BACKEND_HOST=$BACKEND_HOST
          export BACKEND_PORT=$BACKEND_PORT
          cd app
          docker-compose down
          docker-compose -f docker-compose.prod.yml up -d --build